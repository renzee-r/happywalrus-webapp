{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\happywalrus-webapp\\\\src\\\\modules\\\\Analyzing.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Button, Container, CssBaseline, Grid, LinearProgress, Typography } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { compose } from 'recompose';\nimport { PythonShell } from 'python-shell';\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: '#fde3a7',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      height: '90vh',\n      minHeight: 500,\n      maxHeight: 1300\n    }\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  progress: {\n    width: '90vw',\n    height: 5\n  },\n  button: {\n    fontSize: 20\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  image: {\n    height: 150\n  }\n});\n\nclass Analyzing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      completed: 0,\n      modelData: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"movies\").then(response => response.json()).then(data => this.setState({\n      modelData: data\n    }));\n    this.timer = setTimeout(() => this.progress(90), 1000);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  progress(completed) {\n    if (completed > 100) {\n      // this.props.history.push('/image-assessment');\n      this.setState({\n        completed: 100\n      });\n      console.log(this.state.modelData);\n    } else {\n      this.setState({\n        completed\n      });\n      const diff = Math.random() * 10;\n      this.timer = setTimeout(() => this.progress(completed + diff), 1000);\n    }\n  }\n\n  render() {\n    const classes = this.props.classes; // const [completed, setCompleted] = useState(90);\n    // useEffect(() => {\n    // function progress() {\n    //     setCompleted(oldCompleted => {\n    //     if (oldCompleted === 100) {\n    //         this.props.history.push('/image-assessment');\n    //         return 0;\n    //     }\n    //     const diff = Math.random() * 10;\n    //     return Math.min(oldCompleted + diff, 100);\n    //     });\n    // }\n    // const timer = setInterval(progress, 500);\n    // return () => {\n    //     clearInterval(timer);\n    // };\n    // }, []);\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"The walruses are hard at work!\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(LinearProgress, {\n      variant: \"determinate\",\n      value: this.state.completed,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default compose(withRouter, withStyles(styles))(Analyzing);","map":{"version":3,"sources":["C:\\Users\\rj421\\Workspace\\w210\\happywalrus-webapp\\src\\modules\\Analyzing.js"],"names":["React","Component","useState","useEffect","Button","Container","CssBaseline","Grid","LinearProgress","Typography","withRouter","withStyles","compose","PythonShell","styles","theme","root","backgroundColor","position","display","alignItems","breakpoints","up","height","minHeight","maxHeight","container","marginTop","spacing","marginBottom","flexDirection","progress","width","button","fontSize","icon","marginRight","image","Analyzing","constructor","props","state","completed","modelData","componentDidMount","fetch","then","response","json","data","setState","timer","setTimeout","componentWillUnmount","clearTimeout","console","log","diff","Math","random","render","classes"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport {\r\n    Button, Container, CssBaseline, Grid, LinearProgress, Typography\r\n} from '@material-ui/core';\r\nimport { \r\n    withRouter\r\n} from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { compose } from 'recompose';\r\nimport {PythonShell} from 'python-shell';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fde3a7',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('lg')]: {\r\n          height: '90vh',\r\n          minHeight: 500,\r\n          maxHeight: 1300,\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(14),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    progress: {\r\n        width: '90vw',\r\n        height: 5\r\n    },\r\n        button: {\r\n        fontSize: 20\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    image: {\r\n        height: 150\r\n    }\r\n});\r\n\r\nclass Analyzing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            completed: 0,\r\n            modelData: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"movies\")\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                modelData: data\r\n            })\r\n        );\r\n\r\n\r\n        this.timer = setTimeout(() => this.progress(90), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    progress(completed) {\r\n        if (completed > 100) {\r\n            // this.props.history.push('/image-assessment');\r\n            this.setState({completed: 100});\r\n            console.log(this.state.modelData);\r\n\r\n        } else {\r\n            this.setState({completed});\r\n            const diff = Math.random() * 10;\r\n            this.timer = setTimeout(() => this.progress(completed + diff), 1000);\r\n        }\r\n     }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        // const [completed, setCompleted] = useState(90);\r\n\r\n        // useEffect(() => {\r\n        // function progress() {\r\n        //     setCompleted(oldCompleted => {\r\n        //     if (oldCompleted === 100) {\r\n        //         this.props.history.push('/image-assessment');\r\n        //         return 0;\r\n        //     }\r\n        //     const diff = Math.random() * 10;\r\n        //     return Math.min(oldCompleted + diff, 100);\r\n        //     });\r\n        // }\r\n    \r\n        // const timer = setInterval(progress, 500);\r\n        // return () => {\r\n        //     clearInterval(timer);\r\n        // };\r\n        // }, []);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n\r\n                <section className={classes.root}>\r\n                    <Container className={classes.container}>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            The walruses are hard at work!\r\n                        </Typography>\r\n                        <div>\r\n                            <LinearProgress variant=\"determinate\" value={this.state.completed} className={classes.progress}/>\r\n                        </div>\r\n                    </Container>\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withStyles(styles)\r\n)(Analyzing)"]},"metadata":{},"sourceType":"module"}