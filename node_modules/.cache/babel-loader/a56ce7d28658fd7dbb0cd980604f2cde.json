{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\src\\\\modules\\\\Analyzing.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Button, Container, CssBaseline, Grid, LinearProgress, Typography } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { compose } from 'recompose';\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: '#fde3a7',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      height: '90vh',\n      minHeight: 500,\n      maxHeight: 1300\n    }\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    fontSize: 20\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  image: {\n    height: 150\n  }\n});\n\nclass Analyzing extends Component {\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          history = _this$props.history,\n          location = _this$props.location; // const [completed, setCompleted] = useState(90);\n    // useEffect(() => {\n    // function progress() {\n    //     setCompleted(oldCompleted => {\n    //     if (oldCompleted === 100) {\n    //         this.props.history.push('/image-assessment');\n    //         return 0;\n    //     }\n    //     const diff = Math.random() * 10;\n    //     return Math.min(oldCompleted + diff, 100);\n    //     });\n    // }\n    // const timer = setInterval(progress, 500);\n    // return () => {\n    //     clearInterval(timer);\n    // };\n    // }, []);\n\n    console.log(this.props);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"The walruses are hard at work!\"), React.createElement(LinearProgress, {\n      variant: \"determinate\",\n      value: completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nAnalyzing.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default compose(withRouter, withStyles(styles))(Analyzing);","map":{"version":3,"sources":["C:\\Users\\rj421\\Workspace\\w210\\project-app\\src\\modules\\Analyzing.js"],"names":["React","Component","useState","useEffect","PropTypes","Button","Container","CssBaseline","Grid","LinearProgress","Typography","withRouter","withStyles","compose","styles","theme","root","backgroundColor","position","display","alignItems","breakpoints","up","height","minHeight","maxHeight","container","marginTop","spacing","marginBottom","flexDirection","button","fontSize","icon","marginRight","image","Analyzing","render","props","classes","history","location","console","log","completed","propTypes","match","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport PropTypes from \"prop-types\"\r\nimport {\r\n    Button, Container, CssBaseline, Grid, LinearProgress, Typography\r\n} from '@material-ui/core';\r\nimport { \r\n    withRouter\r\n} from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { compose } from 'recompose';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fde3a7',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('lg')]: {\r\n          height: '90vh',\r\n          minHeight: 500,\r\n          maxHeight: 1300,\r\n        },\r\n      },\r\n      container: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(14),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      button: {\r\n        fontSize: 20\r\n      },\r\n      icon: {\r\n          marginRight: theme.spacing(2)\r\n      },\r\n      image: {\r\n          height: 150\r\n      }\r\n});\r\n\r\nclass Analyzing extends Component {\r\n    static propTypes = {\r\n        match: PropTypes.object.isRequired,\r\n        location: PropTypes.object.isRequired,\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    render() {\r\n        const {classes, history, location } = this.props;\r\n        // const [completed, setCompleted] = useState(90);\r\n\r\n        // useEffect(() => {\r\n        // function progress() {\r\n        //     setCompleted(oldCompleted => {\r\n        //     if (oldCompleted === 100) {\r\n        //         this.props.history.push('/image-assessment');\r\n        //         return 0;\r\n        //     }\r\n        //     const diff = Math.random() * 10;\r\n        //     return Math.min(oldCompleted + diff, 100);\r\n        //     });\r\n        // }\r\n    \r\n        // const timer = setInterval(progress, 500);\r\n        // return () => {\r\n        //     clearInterval(timer);\r\n        // };\r\n        // }, []);\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n\r\n                <section className={classes.root}>\r\n                    <Container className={classes.container}>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            The walruses are hard at work!\r\n                        </Typography>\r\n                        \r\n                        <LinearProgress variant=\"determinate\" value={completed} />\r\n                    </Container>\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withStyles(styles)\r\n)(Analyzing)"]},"metadata":{},"sourceType":"module"}