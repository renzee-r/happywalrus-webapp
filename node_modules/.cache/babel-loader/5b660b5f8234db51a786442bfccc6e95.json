{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\src\\\\modules\\\\Analyzing.js\";\nimport React from 'react';\nimport { Button, Container, CssBaseline, Grid, LinearProgress, Typography } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route, Link as RouterLink, Redirect, withRouter } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#fde3a7',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      height: '90vh',\n      minHeight: 500,\n      maxHeight: 1300\n    }\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    fontSize: 20\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  image: {\n    height: 150\n  }\n}));\n\nfunction Analyzing(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(90),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        completed = _React$useState2[0],\n        setCompleted = _React$useState2[1];\n\n  const _this$props = this.props,\n        match = _this$props.match,\n        location = _this$props.location,\n        history = _this$props.history;\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          history.push('/image-assessment');\n          return 0;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    const timer = setInterval(progress, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"The walruses are hard at work!\"))), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))))));\n}\n\nexport default withRouter(Analyzing);","map":{"version":3,"sources":["C:\\Users\\rj421\\Workspace\\w210\\project-app\\src\\modules\\Analyzing.js"],"names":["React","Button","Container","CssBaseline","Grid","LinearProgress","Typography","BrowserRouter","Router","Switch","Route","Link","RouterLink","Redirect","withRouter","makeStyles","useStyles","theme","root","backgroundColor","position","display","alignItems","breakpoints","up","height","minHeight","maxHeight","container","marginTop","spacing","marginBottom","flexDirection","button","fontSize","icon","marginRight","image","Analyzing","props","classes","useState","completed","setCompleted","match","location","history","useEffect","progress","oldCompleted","push","diff","Math","random","min","timer","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button, Container, CssBaseline, Grid, LinearProgress, Typography\r\n} from '@material-ui/core';\r\nimport { \r\n    BrowserRouter as Router, Switch, Route, Link as RouterLink, Redirect,\r\n    withRouter\r\n} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#fde3a7',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('lg')]: {\r\n          height: '90vh',\r\n          minHeight: 500,\r\n          maxHeight: 1300,\r\n        },\r\n      },\r\n      container: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(14),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      button: {\r\n        fontSize: 20\r\n      },\r\n      icon: {\r\n          marginRight: theme.spacing(2)\r\n      },\r\n      image: {\r\n          height: 150\r\n      }\r\n}));\r\n\r\nfunction Analyzing(props) {\r\n    const classes = useStyles();\r\n    const [completed, setCompleted] = React.useState(90);\r\n    const { match, location, history } = this.props\r\n\r\n    React.useEffect(() => {\r\n      function progress() {\r\n        setCompleted(oldCompleted => {\r\n          if (oldCompleted === 100) {\r\n            history.push('/image-assessment');\r\n            return 0;\r\n          }\r\n          const diff = Math.random() * 10;\r\n          return Math.min(oldCompleted + diff, 100);\r\n        });\r\n      }\r\n  \r\n      const timer = setInterval(progress, 500);\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n  \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n\r\n            <section className={classes.root}>\r\n                <Container className={classes.container}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item>\r\n                            <Typography variant=\"h3\" gutterBottom>\r\n                                The walruses are hard at work!\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item sm={12}>\r\n                            <LinearProgress variant=\"determinate\" value={completed} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Analyzing);"]},"metadata":{},"sourceType":"module"}