{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\src\\\\modules\\\\Analyzing.js\";\nimport React from 'react';\nimport { Button, Container, CssBaseline, Grid, LinearProgress } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route, Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    heigh: '95vh'\n  }\n}));\nconst RefLink = React.forwardRef((props, ref) => React.createElement(RouterLink, Object.assign({\n  innerRef: ref\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n})));\nexport default function Analyzing() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        completed = _React$useState2[0],\n        setCompleted = _React$useState2[1];\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 0;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    const timer = setInterval(progress, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(LinearProgress, {\n    color: \"secondary\",\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\rj421\\Workspace\\w210\\project-app\\src\\modules\\Analyzing.js"],"names":["React","Button","Container","CssBaseline","Grid","LinearProgress","BrowserRouter","Router","Switch","Route","Link","RouterLink","makeStyles","useStyles","theme","root","flexGrow","heigh","RefLink","forwardRef","props","ref","Analyzing","classes","useState","completed","setCompleted","useEffect","progress","oldCompleted","diff","Math","random","min","timer","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EACYC,SADZ,EACuBC,WADvB,EACoCC,IADpC,EAC0CC,cAD1C,QAEO,mBAFP;AAGA,SACIC,aAAa,IAAIC,MADrB,EAC6BC,MAD7B,EACqCC,KADrC,EAC4CC,IAAI,IAAIC,UADpD,QAEO,kBAFP;AAGA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,CADR;AAEFC,IAAAA,KAAK,EAAE;AAFL;AAD6B,CAAL,CAAN,CAA5B;AAOA,MAAMC,OAAO,GAAGlB,KAAK,CAACmB,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB,oBAAC,UAAD;AAAY,EAAA,QAAQ,EAAEA;AAAtB,GAA+BD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC,CAAhB;AAEA,eAAe,SAASE,SAAT,GAAqB;AAChC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AADgC,0BAEEb,KAAK,CAACwB,QAAN,CAAe,CAAf,CAFF;AAAA;AAAA,QAEzBC,SAFyB;AAAA,QAEdC,YAFc;;AAIhC1B,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,MAAM;AACpB,aAASC,QAAT,GAAoB;AAClBF,MAAAA,YAAY,CAACG,YAAY,IAAI;AAC3B,YAAIA,YAAY,KAAK,GAArB,EAA0B;AACxB,iBAAO,CAAP;AACD;;AACD,cAAMC,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,eAAOD,IAAI,CAACE,GAAL,CAASJ,YAAY,GAAGC,IAAxB,EAA8B,GAA9B,CAAP;AACD,OANW,CAAZ;AAOD;;AAED,UAAMI,KAAK,GAAGC,WAAW,CAACP,QAAD,EAAW,GAAX,CAAzB;AACA,WAAO,MAAM;AACXQ,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GAfD,EAeG,EAfH;AAkBA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAC,aAAxB;AAAsC,IAAA,KAAK,EAAEU,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,WAAtB;AAAkC,IAAA,OAAO,EAAC,aAA1C;AAAwD,IAAA,KAAK,EAAEA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,CADJ;AAUH","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button, Container, CssBaseline, Grid, LinearProgress \r\n} from '@material-ui/core';\r\nimport { \r\n    BrowserRouter as Router, Switch, Route, Link as RouterLink \r\n} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        heigh: '95vh',\r\n    },\r\n}));\r\n\r\nconst RefLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\r\n\r\nexport default function Analyzing() {\r\n    const classes = useStyles();\r\n    const [completed, setCompleted] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n      function progress() {\r\n        setCompleted(oldCompleted => {\r\n          if (oldCompleted === 100) {\r\n            return 0;\r\n          }\r\n          const diff = Math.random() * 10;\r\n          return Math.min(oldCompleted + diff, 100);\r\n        });\r\n      }\r\n  \r\n      const timer = setInterval(progress, 500);\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n  \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <div className={classes.root}>\r\n                <LinearProgress variant=\"determinate\" value={completed} />\r\n                <br />\r\n                <LinearProgress color=\"secondary\" variant=\"determinate\" value={completed} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}