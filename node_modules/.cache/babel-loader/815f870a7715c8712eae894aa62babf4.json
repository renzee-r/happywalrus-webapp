{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\src\\\\modules\\\\Upload.js\";\nimport React from 'react';\nimport { Button, Container, CssBaseline, Grid, Typography } from '@material-ui/core';\nimport Publish from '@material-ui/icons/Publish';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    color: theme.palette.common.white,\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('sm')]: {\n      height: '80vh',\n      minHeight: 500,\n      maxHeight: 1300\n    }\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    fontSize: 20\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\nexport default function Upload() {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"sm\",\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" className=\", classes.button, \">\", React.createElement(Publish, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), \"Upload\"), React.createElement(Dialog, {\n    fullWidth: true,\n    maxWidth: 'md',\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Select an Image to Upload...\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"You can set my maximum width and whether to adapt or not.\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Upload\"))))))));\n}","map":{"version":3,"sources":["C:\\Users\\rj421\\Workspace\\w210\\project-app\\src\\modules\\Upload.js"],"names":["React","Button","Container","CssBaseline","Grid","Typography","Publish","makeStyles","useStyles","theme","root","color","palette","common","white","position","display","alignItems","breakpoints","up","height","minHeight","maxHeight","container","marginTop","spacing","marginBottom","flexDirection","button","fontSize","icon","marginRight","Upload","useState","open","setOpen","classes","handleClickOpen","handleClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button, Container, CssBaseline, Grid, Typography, \r\n} from '@material-ui/core';\r\nimport Publish from '@material-ui/icons/Publish';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.common.white,\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n          height: '80vh',\r\n          minHeight: 500,\r\n          maxHeight: 1300,\r\n        },\r\n      },\r\n      container: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(14),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      button: {\r\n        fontSize: 20\r\n      },\r\n      icon: {\r\n          marginRight: theme.spacing(2)\r\n      }\r\n}));\r\n\r\nexport default function Upload() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n\r\n            {/* Hero unit */}\r\n            <section className={classes.root}>\r\n                <Container maxWidth=\"sm\" className={classes.container}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleClickOpen}> className={classes.button}>\r\n                                <Publish fontSize=\"large\" className={classes.icon}/>\r\n                                Upload\r\n                            </Button>\r\n\r\n                            <Dialog\r\n                                fullWidth={true}\r\n                                maxWidth={'md'}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"dialog-title\"\r\n                            >\r\n                                <DialogTitle id=\"dialog-title\">Select an Image to Upload...</DialogTitle>\r\n\r\n                                <DialogContent>\r\n\r\n                                    <DialogContentText>\r\n                                        You can set my maximum width and whether to adapt or not.\r\n                                    </DialogContentText>\r\n                                    \r\n                                  \r\n                                </DialogContent>\r\n\r\n                                <DialogActions>\r\n\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Upload\r\n                                </Button>\r\n                                \r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}