{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\src\\\\modules\\\\Upload.js\";\nimport React from 'react';\nimport { Button, Container, CssBaseline, Grid, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route, Link as RouterLink } from \"react-router-dom\";\nimport Publish from '@material-ui/icons/Publish';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // backgroundColor: '#fde3a7',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('sm')]: {\n      height: '90vh',\n      minHeight: 500,\n      maxHeight: 1300\n    }\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    fontSize: 20\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  image: {\n    height: 150\n  }\n}));\nconst RefLink = React.forwardRef((props, ref) => React.createElement(RouterLink, Object.assign({\n  innerRef: ref\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n})));\nexport default function Upload() {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleImageClick = (e, data) => {\n    console.log(data);\n  };\n\n  return (// Guidelines for ideal image quality/characteristics\n    // Dialog options for user provided features\n    React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"sm\",\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleClickOpen,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Publish, {\n      fontSize: \"large\",\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \"Upload\"))))), React.createElement(Dialog, {\n      fullWidth: true,\n      maxWidth: 'md',\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Select an Image to Upload...\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxwidth: \"sm\",\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"image-placeholder.jpg\",\n      alt: \"upload-img\",\n      className: classes.image,\n      onClick: handleImageClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"image-placeholder.jpg\",\n      alt: \"upload-img\",\n      className: classes.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"image-placeholder.jpg\",\n      alt: \"upload-img\",\n      className: classes.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: handleClose,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      component: RefLink,\n      to: \"/analyzing\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Confirm\"))))\n  );\n}","map":{"version":3,"sources":["C:\\Users\\rj421\\Workspace\\w210\\project-app\\src\\modules\\Upload.js"],"names":["React","Button","Container","CssBaseline","Grid","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","BrowserRouter","Router","Switch","Route","Link","RouterLink","Publish","makeStyles","useStyles","theme","root","position","display","alignItems","breakpoints","up","height","minHeight","maxHeight","container","marginTop","spacing","marginBottom","flexDirection","button","fontSize","icon","marginRight","image","RefLink","forwardRef","props","ref","Upload","useState","open","setOpen","classes","handleClickOpen","handleClose","handleImageClick","e","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EACYC,SADZ,EACuBC,WADvB,EACoCC,IADpC,EAC0CC,UAD1C,EAEIC,MAFJ,EAEYC,WAFZ,EAEyBC,aAFzB,EAEwCC,iBAFxC,EAE2DC,aAF3D,QAGO,mBAHP;AAIA,SACIC,aAAa,IAAIC,MADrB,EAC6BC,MAD7B,EACqCC,KADrC,EAC4CC,IAAI,IAAIC,UADpD,QAEO,kBAFP;AAGA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACF;AACAC,IAAAA,QAAQ,EAAE,UAFR;AAGFC,IAAAA,OAAO,EAAE,MAHP;AAIFC,IAAAA,UAAU,EAAE,QAJV;AAKF,KAACJ,KAAK,CAACK,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BC,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,SAAS,EAAE,GAFiB;AAG5BC,MAAAA,SAAS,EAAE;AAHiB;AAL5B,GAD6B;AAYjCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd,CADF;AAETC,IAAAA,YAAY,EAAEb,KAAK,CAACY,OAAN,CAAc,EAAd,CAFL;AAGTT,IAAAA,OAAO,EAAE,MAHA;AAITW,IAAAA,aAAa,EAAE,QAJN;AAKTV,IAAAA,UAAU,EAAE;AALH,GAZsB;AAmBjCW,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAnByB;AAsBjCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAElB,KAAK,CAACY,OAAN,CAAc,CAAd;AADX,GAtB2B;AAyBjCO,EAAAA,KAAK,EAAE;AACHZ,IAAAA,MAAM,EAAE;AADL;AAzB0B,CAAL,CAAN,CAA5B;AA8BA,MAAMa,OAAO,GAAGxC,KAAK,CAACyC,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB,oBAAC,UAAD;AAAY,EAAA,QAAQ,EAAEA;AAAtB,GAA+BD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC,CAAhB;AAEA,eAAe,SAASE,MAAT,GAAkB;AAAA,0BACL5C,KAAK,CAAC6C,QAAN,CAAe,KAAf,CADK;AAAA;AAAA,QACtBC,IADsB;AAAA,QAChBC,OADgB;;AAE7B,QAAMC,OAAO,GAAG7B,SAAS,EAAzB;;AAEA,QAAM8B,eAAe,GAAG,MAAM;AAC1BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMI,gBAAgB,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEH,GAHD;;AAKA,SACI;AACA;AAEA,wBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAS,MAAA,SAAS,EAAEL,OAAO,CAAC3B,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAE2B,OAAO,CAAClB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,IAAI,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAEmB,eAAlE;AAAmF,MAAA,SAAS,EAAED,OAAO,CAACb,MAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEa,OAAO,CAACX,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,WADJ,CADJ,CADJ,CADJ,CAHJ,EAkBI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAE,IADf;AAEI,MAAA,QAAQ,EAAE,IAFd;AAGI,MAAA,IAAI,EAAES,IAHV;AAII,MAAA,OAAO,EAAEI,WAJb;AAKI,yBAAgB,cALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAPJ,EASI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEF,OAAO,CAAClB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,GAAG,EAAC,uBADR;AAEI,MAAA,GAAG,EAAC,YAFR;AAGI,MAAA,SAAS,EAAEkB,OAAO,CAACT,KAHvB;AAII,MAAA,OAAO,EAAEY,gBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAUI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,GAAG,EAAC,uBADR;AAEI,MAAA,GAAG,EAAC,YAFR;AAGI,MAAA,SAAS,EAAEH,OAAO,CAACT,KAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAkBI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,GAAG,EAAC,uBADR;AAEI,MAAA,GAAG,EAAC,YAFR;AAGI,MAAA,SAAS,EAAES,OAAO,CAACT,KAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAlBJ,CADJ,CADJ,CATJ,EAyCI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEW,WAAjB;AAA8B,MAAA,KAAK,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEV,OAAnB;AAA4B,MAAA,EAAE,EAAC,YAA/B;AAA4C,MAAA,KAAK,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CAzCJ,CAlBJ;AAJJ;AA2EH","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button, Container, CssBaseline, Grid, Typography, \r\n    Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions\r\n} from '@material-ui/core';\r\nimport { \r\n    BrowserRouter as Router, Switch, Route, Link as RouterLink \r\n} from \"react-router-dom\";\r\nimport Publish from '@material-ui/icons/Publish';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        // backgroundColor: '#fde3a7',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n          height: '90vh',\r\n          minHeight: 500,\r\n          maxHeight: 1300,\r\n        },\r\n      },\r\n      container: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(14),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      button: {\r\n        fontSize: 20\r\n      },\r\n      icon: {\r\n          marginRight: theme.spacing(2)\r\n      },\r\n      image: {\r\n          height: 150,\r\n      }\r\n}));\r\n\r\nconst RefLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\r\n\r\nexport default function Upload() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleImageClick = (e, data) => {\r\n        console.log(data);\r\n        \r\n    }\r\n\r\n    return (\r\n        // Guidelines for ideal image quality/characteristics\r\n        // Dialog options for user provided features\r\n\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n\r\n            <section className={classes.root}>\r\n                <Container maxWidth=\"sm\" className={classes.container}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleClickOpen} className={classes.button}>\r\n                                <Publish fontSize=\"large\" className={classes.icon}/>\r\n                                Upload\r\n                            </Button>\r\n\r\n                            \r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </section>\r\n\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth={'md'}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"dialog-title\"\r\n            >\r\n                <DialogTitle id=\"dialog-title\">Select an Image to Upload...</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <Container maxwidth=\"sm\" className={classes.container}>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid sm={4}>\r\n                                <img\r\n                                    src=\"image-placeholder.jpg\"\r\n                                    alt=\"upload-img\"\r\n                                    className={classes.image}\r\n                                    onClick={handleImageClick}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid sm={4}>\r\n                                <img\r\n                                    src=\"image-placeholder.jpg\"\r\n                                    alt=\"upload-img\"\r\n                                    className={classes.image}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid sm={4}>\r\n                                <img\r\n                                    src=\"image-placeholder.jpg\"\r\n                                    alt=\"upload-img\"\r\n                                    className={classes.image}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <Button component={RefLink} to=\"/analyzing\" color=\"primary\">\r\n                        Confirm\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}