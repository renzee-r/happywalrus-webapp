{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\src\\\\modules\\\\ProductHero.js\";\nimport React, { Component } from 'react';\nimport { Button, Container, CssBaseline, Grid, Typography, Fade } from '@material-ui/core';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { Linear } from 'gsap';\nimport ScrollMagic from 'scrollmagic';\nimport 'animation.gsap';\nimport 'debug.addIndicators';\n\nconst styles = theme => ({\n  root: {\n    // backgroundColor: '#fde3a7',\n    // backgroundImage: `url('hero-bg-1.png')`,\n    // backgroundSize: 'cover',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    // [theme.breakpoints.up('sm')]: {\n    //     height: '85vh',\n    //     minHeight: 500,\n    //     maxHeight: 1300,\n    // },\n    // width: '100%',\n    height: '85vh',\n    minHeight: 500,\n    overflowX: 'hidden',\n    overflowY: 'hidden' // perspective: '8px',\n    // perspectiveOrigin: '0%',\n    // display: 'flex',\n\n  },\n  container: {\n    // marginTop: theme.spacing(3),\n    // marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  // foreground: {\n  //     marginTop: 'auto',\n  //     marginBottom: '50px',\n  //     transformOrigin: '0',\n  //     transform: 'translateZ(3px) scale(0.625)',\n  // },\n  parallaxParent: {\n    height: '65vh',\n    width: '100%'\n  },\n  parallaxChild: {\n    height: '150%',\n    position: 'relative',\n    top: '-50%',\n    backgroundImage: \"url('hero-bg-1.png')\",\n    backgroundSize: 'cover'\n  }\n});\n\nconst RefLink = React.forwardRef((props, ref) => React.createElement(RouterLink, Object.assign({\n  innerRef: ref\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n})));\n\nclass ProductHero extends Component {\n  constructor(props) {\n    super(props);\n    this.controller = new ScrollMagic.Controller({\n      globalSceneOptions: {\n        triggerHook: \"onEnter\",\n        duration: \"150%\"\n      }\n    });\n  }\n\n  componentDidMount() {\n    // // build tween\n    // var tween = new TimelineMax ()\n    // .add([\n    //     TweenMax.fromTo(\"#myElement\", 1, {top: 0}, {top: -350, ease: Linear.easeNone}),\n    // ]);\n    new ScrollMagic.Scene({\n      triggerElement: '#scrollStarts'\n    }).setTween('#myElement', {\n      y: '100%',\n      ease: Linear.easeNone\n    }).addIndicators() // add indicators (requires plugin)\n    .addTo(this.controller); // assign the scene to the controller\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"scrollStarts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"myElement\",\n      className: classes.parallaxParent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.parallaxChild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"sm\",\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      timeout: 1000,\n      in: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.foreground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      align: \"center\",\n      variant: \"h2\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Header 1\"), React.createElement(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      color: \"textSecondary\",\n      paragraph: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Something short and leading about the application.\"), React.createElement(\"div\", {\n      className: classes.heroButtons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: RefLink,\n      to: \"/upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Get Started\")))))))))));\n  }\n\n}\n\nexport default withStyles(styles)(ProductHero);","map":{"version":3,"sources":["C:\\Users\\rj421\\Workspace\\w210\\project-app\\src\\modules\\ProductHero.js"],"names":["React","Component","Button","Container","CssBaseline","Grid","Typography","Fade","Link","RouterLink","withStyles","Linear","ScrollMagic","styles","theme","root","position","display","alignItems","height","minHeight","overflowX","overflowY","container","flexDirection","parallaxParent","width","parallaxChild","top","backgroundImage","backgroundSize","RefLink","forwardRef","props","ref","ProductHero","constructor","controller","Controller","globalSceneOptions","triggerHook","duration","componentDidMount","Scene","triggerElement","setTween","y","ease","easeNone","addIndicators","addTo","render","classes","foreground","heroButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Button, Container, CssBaseline, Grid, Typography,\r\n    Fade\r\n} from '@material-ui/core';\r\nimport { \r\n    Link as RouterLink \r\n} from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Linear } from 'gsap';\r\nimport ScrollMagic from 'scrollmagic';\r\nimport 'animation.gsap'\r\nimport 'debug.addIndicators'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        // backgroundColor: '#fde3a7',\r\n        // backgroundImage: `url('hero-bg-1.png')`,\r\n        // backgroundSize: 'cover',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        // [theme.breakpoints.up('sm')]: {\r\n        //     height: '85vh',\r\n        //     minHeight: 500,\r\n        //     maxHeight: 1300,\r\n        // },\r\n\r\n        // width: '100%',\r\n        height: '85vh',\r\n        minHeight: 500,\r\n        overflowX: 'hidden',\r\n        overflowY: 'hidden',\r\n        // perspective: '8px',\r\n        // perspectiveOrigin: '0%',\r\n        // display: 'flex',\r\n    },\r\n    container: {\r\n        // marginTop: theme.spacing(3),\r\n        // marginBottom: theme.spacing(14),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    // foreground: {\r\n    //     marginTop: 'auto',\r\n    //     marginBottom: '50px',\r\n    //     transformOrigin: '0',\r\n    //     transform: 'translateZ(3px) scale(0.625)',\r\n    // },\r\n\r\n    parallaxParent: {\r\n        height: '65vh',\r\n        width: '100%',\r\n    },\r\n    parallaxChild: {\r\n        height: '150%',\r\n        position: 'relative',\r\n        top: '-50%',\r\n        backgroundImage: `url('hero-bg-1.png')`,\r\n        backgroundSize: 'cover',\r\n    },\r\n});\r\n\r\nconst RefLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\r\n\r\nclass ProductHero extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.controller = new ScrollMagic.Controller({globalSceneOptions: {triggerHook: \"onEnter\", duration: \"150%\"}});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // // build tween\r\n        // var tween = new TimelineMax ()\r\n        // .add([\r\n        //     TweenMax.fromTo(\"#myElement\", 1, {top: 0}, {top: -350, ease: Linear.easeNone}),\r\n        // ]);\r\n\r\n\r\n        new ScrollMagic.Scene({\r\n            triggerElement: '#scrollStarts',\r\n        })\r\n        .setTween('#myElement', {y: '100%', ease: Linear.easeNone})\r\n        .addIndicators() // add indicators (requires plugin)\r\n        .addTo(this.controller); // assign the scene to the controller\r\n\r\n      }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n\r\n\r\n                <section className={classes.root}>\r\n                    <div id=\"scrollStarts\"></div>\r\n\r\n                    <div id=\"myElement\" className={classes.parallaxParent}>\r\n                        <div className={classes.parallaxChild}>\r\n                            <Container maxWidth=\"sm\" className={classes.container}>\r\n                                {/* <div id=\"parallax1\" className={classes.parallaxParent}>\r\n                                    <div className={classes.parallaxChild}>HELLO</div>\r\n                                </div>\r\n                                */}\r\n\r\n                                <Fade timeout={1000} in={true}>\r\n                                    <div className={classes.foreground}>\r\n                                        <Typography component=\"h1\" align=\"center\" variant=\"h2\" color=\"textPrimary\" gutterBottom> \r\n                                            Header 1\r\n                                        </Typography>\r\n                                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                                            Something short and leading about the application.\r\n                                        </Typography>\r\n                                        <div className={classes.heroButtons}>\r\n                                            <Grid container justify=\"center\">\r\n                                                <Grid item>\r\n                                                    <Button variant=\"contained\" color=\"primary\" component={RefLink} to=\"/upload\">\r\n                                                        Get Started\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fade>\r\n                            </Container>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProductHero)"]},"metadata":{},"sourceType":"module"}