{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rj421\\\\Workspace\\\\w210\\\\project-app\\\\src\\\\modules\\\\Upload.js\";\nimport React, { Component } from 'react';\nimport { Button, Container, CssBaseline, Grid, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route, Link as RouterLink } from \"react-router-dom\";\nimport Publish from '@material-ui/icons/Publish';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = theme => ({\n  root: {\n    // backgroundColor: '#fde3a7',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('sm')]: {\n      height: '90vh',\n      minHeight: 500,\n      maxHeight: 1300\n    }\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    fontSize: 20\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  image: {\n    height: 150\n  }\n});\n\nconst RefLink = React.forwardRef((props, ref) => React.createElement(RouterLink, Object.assign({\n  innerRef: ref\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n})));\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.open = true;\n    };\n\n    this.handleClose = () => {\n      this.open = false;\n    };\n\n    this.handleImageClick = (e, data) => {\n      console.log(e.target);\n      e.target.style.border = 'solid';\n    };\n\n    this.open = false;\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return (// Guidelines for ideal image quality/characteristics\n      // Dialog options for user provided features\n      React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Container, {\n        maxWidth: \"sm\",\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        onClick: this.handleClickOpen,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Publish, {\n        fontSize: \"large\",\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), \"Upload\"))))), React.createElement(Dialog, {\n        fullWidth: true,\n        maxWidth: 'md',\n        open: this.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Select an Image to Upload...\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Container, {\n        maxwidth: \"sm\",\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"image-placeholder.jpg\",\n        alt: \"upload-img\",\n        className: classes.image,\n        onClick: this.handleImageClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"image-placeholder.jpg\",\n        alt: \"upload-img\",\n        className: classes.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"image-placeholder.jpg\",\n        alt: \"upload-img\",\n        className: classes.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        component: RefLink,\n        to: \"/analyzing\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Confirm\"))))\n    );\n  }\n\n}\n\nexport default withStyles(styles)(Upload);","map":{"version":3,"sources":["C:\\Users\\rj421\\Workspace\\w210\\project-app\\src\\modules\\Upload.js"],"names":["React","Component","Button","Container","CssBaseline","Grid","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","BrowserRouter","Router","Switch","Route","Link","RouterLink","Publish","withStyles","styles","theme","root","position","display","alignItems","breakpoints","up","height","minHeight","maxHeight","container","marginTop","spacing","marginBottom","flexDirection","button","fontSize","icon","marginRight","image","RefLink","forwardRef","props","ref","Upload","constructor","handleClickOpen","open","handleClose","handleImageClick","e","data","console","log","target","style","border","render","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EACYC,SADZ,EACuBC,WADvB,EACoCC,IADpC,EAC0CC,UAD1C,EAEIC,MAFJ,EAEYC,WAFZ,EAEyBC,aAFzB,EAEwCC,iBAFxC,EAE2DC,aAF3D,QAGO,mBAHP;AAIA,SACIC,aAAa,IAAIC,MADrB,EAC6BC,MAD7B,EACqCC,KADrC,EAC4CC,IAAI,IAAIC,UADpD,QAEO,kBAFP;AAGA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACF;AACAC,IAAAA,QAAQ,EAAE,UAFR;AAGFC,IAAAA,OAAO,EAAE,MAHP;AAIFC,IAAAA,UAAU,EAAE,QAJV;AAKF,KAACJ,KAAK,CAACK,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BC,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,SAAS,EAAE,GAFiB;AAG5BC,MAAAA,SAAS,EAAE;AAHiB;AAL5B,GADe;AAYnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd,CADF;AAETC,IAAAA,YAAY,EAAEb,KAAK,CAACY,OAAN,CAAc,EAAd,CAFL;AAGTT,IAAAA,OAAO,EAAE,MAHA;AAITW,IAAAA,aAAa,EAAE,QAJN;AAKTV,IAAAA,UAAU,EAAE;AALH,GAZQ;AAmBnBW,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAnBW;AAsBnBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAElB,KAAK,CAACY,OAAN,CAAc,CAAd;AADX,GAtBa;AAyBnBO,EAAAA,KAAK,EAAE;AACHZ,IAAAA,MAAM,EAAE;AADL;AAzBY,CAAL,CAApB;;AA8BA,MAAMa,OAAO,GAAGzC,KAAK,CAAC0C,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB,oBAAC,UAAD;AAAY,EAAA,QAAQ,EAAEA;AAAtB,GAA+BD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC,CAAhB;;AAEA,MAAME,MAAN,SAAqB5C,SAArB,CAA+B;AAE3B6C,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBI,eANmB,GAMD,MAAM;AACpB,WAAKC,IAAL,GAAY,IAAZ;AACH,KARkB;;AAAA,SAUnBC,WAVmB,GAUL,MAAM;AAChB,WAAKD,IAAL,GAAY,KAAZ;AACH,KAZkB;;AAAA,SAcnBE,gBAdmB,GAcA,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAd;AACAJ,MAAAA,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,OAAxB;AAEH,KAlBkB;;AAGf,SAAKT,IAAL,GAAY,KAAZ;AACH;;AAgBDU,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKhB,KADpB,CACGgB,OADH;AAGL,WACI;AACA;AAEA,0BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAS,QAAA,SAAS,EAAEA,OAAO,CAACrC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAEqC,OAAO,CAAC5B,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAyD,QAAA,OAAO,EAAE,KAAKgB,eAAvE;AAAwF,QAAA,SAAS,EAAEY,OAAO,CAACvB,MAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAC,OAAlB;AAA0B,QAAA,SAAS,EAAEuB,OAAO,CAACrB,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,WADJ,CADJ,CADJ,CADJ,CAHJ,EAkBI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAE,IADf;AAEI,QAAA,QAAQ,EAAE,IAFd;AAGI,QAAA,IAAI,EAAE,KAAKU,IAHf;AAII,QAAA,OAAO,EAAE,KAAKC,WAJlB;AAKI,2BAAgB,cALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAPJ,EASI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAEU,OAAO,CAAC5B,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAC,uBADR;AAEI,QAAA,GAAG,EAAC,YAFR;AAGI,QAAA,SAAS,EAAE4B,OAAO,CAACnB,KAHvB;AAII,QAAA,OAAO,EAAE,KAAKU,gBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAUI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAC,uBADR;AAEI,QAAA,GAAG,EAAC,YAFR;AAGI,QAAA,SAAS,EAAES,OAAO,CAACnB,KAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAVJ,EAkBI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAC,uBADR;AAEI,QAAA,GAAG,EAAC,YAFR;AAGI,QAAA,SAAS,EAAEmB,OAAO,CAACnB,KAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAlBJ,CADJ,CADJ,CATJ,EAyCI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKS,WAAtB;AAAmC,QAAA,KAAK,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAKI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAER,OAAnB;AAA4B,QAAA,EAAE,EAAC,YAA/B;AAA4C,QAAA,KAAK,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,CAzCJ,CAlBJ;AAJJ;AA2EH;;AApG0B;;AAwG/B,eAAetB,UAAU,CAACC,MAAD,CAAV,CAAmByB,MAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Button, Container, CssBaseline, Grid, Typography, \r\n    Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions\r\n} from '@material-ui/core';\r\nimport { \r\n    BrowserRouter as Router, Switch, Route, Link as RouterLink \r\n} from \"react-router-dom\";\r\nimport Publish from '@material-ui/icons/Publish';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        // backgroundColor: '#fde3a7',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n          height: '90vh',\r\n          minHeight: 500,\r\n          maxHeight: 1300,\r\n        },\r\n      },\r\n      container: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(14),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      button: {\r\n        fontSize: 20\r\n      },\r\n      icon: {\r\n          marginRight: theme.spacing(2)\r\n      },\r\n      image: {\r\n          height: 150,\r\n      }\r\n});\r\n\r\nconst RefLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\r\n\r\nclass Upload extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.open = false;\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.open = true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.open = false;\r\n    };\r\n\r\n    handleImageClick = (e, data) => {\r\n        console.log(e.target);\r\n        e.target.style.border = 'solid';\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            // Guidelines for ideal image quality/characteristics\r\n            // Dialog options for user provided features\r\n\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n\r\n                <section className={classes.root}>\r\n                    <Container maxWidth=\"sm\" className={classes.container}>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.handleClickOpen} className={classes.button}>\r\n                                    <Publish fontSize=\"large\" className={classes.icon}/>\r\n                                    Upload\r\n                                </Button>\r\n\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </section>\r\n\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'md'}\r\n                    open={this.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"dialog-title\">Select an Image to Upload...</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <Container maxwidth=\"sm\" className={classes.container}>\r\n                            <Grid container justify=\"center\">\r\n                                <Grid sm={4}>\r\n                                    <img\r\n                                        src=\"image-placeholder.jpg\"\r\n                                        alt=\"upload-img\"\r\n                                        className={classes.image}\r\n                                        onClick={this.handleImageClick}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid sm={4}>\r\n                                    <img\r\n                                        src=\"image-placeholder.jpg\"\r\n                                        alt=\"upload-img\"\r\n                                        className={classes.image}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid sm={4}>\r\n                                    <img\r\n                                        src=\"image-placeholder.jpg\"\r\n                                        alt=\"upload-img\"\r\n                                        className={classes.image}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <Button component={RefLink} to=\"/analyzing\" color=\"primary\">\r\n                            Confirm\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default withStyles(styles)(Upload)"]},"metadata":{},"sourceType":"module"}